#+TITLE: Node.js

* Summary
    :PROPERTIES:
    :TOC:      :include all :depth 2 :ignore this
    :END:
  :CONTENTS:
  - [[#progress][Progress]]
    - [[#books][Books]]
    - [[#sloc][SLOC]]
    - [[#skills][SKills]]
  - [[#features][Features]]
    - [[#nubers][Nubers]]
  - [[#concepts][Concepts]]
  - [[#books][Books]]
    - [[#eloquent-javascript][Eloquent JavaScript]]
  - [[#sites][Sites]]
    - [[#web-js---misc][Web JS - Misc]]
    - [[#web-js---online-tools][Web JS - Online Tools]]
  - [[#frameworks][Frameworks]]
  - [[#refactoring][Refactoring]]
  - [[#articles][Articles]]
  - [[#interview][Interview]]
  :END:
* Progress
** Books
| Books         | Cap                          | @ |
|---------------+------------------------------+---|
| Node cookbook | 3: Streams, Streams, Streams |   |
** SLOC
| Project   | folder                  | file         | @ |
|-----------+-------------------------+--------------+---|
| draggable | src/Draggable/DragEvent | DragEvent.js |   |
| inquirer  |                         |              |   |

* cli
** options
|                        |   |
|------------------------+---|
| --print or -p          |   |
| --eval or -e <COMMAND> |   |
| -i                     |   |
| --check or -c          |   |
| --require or -r        |   |
** env
|             |   |
|-------------+---|
| FORCE_COLOR |   |
| NO_COLOR    |   |
* Library
** [[https://nodejs.org/api/fs.html][fs]]
*** readFileSync
*** readdirSync
*** writeFileSync
*** readFile
** [[https://nodejs.org/docs/latest-v16.x/api/process.html][process]]
*** stdin
*** stdout
*** env
#+begin_src js
process.env.USER_ID // "239482"
process.env.USER_KEY // "foobar"
process.env.PATH?.split(':') ?? ['/bin', '/usr/bin', '/sbin/']
#+end_src
*** cwd
*** exit
*** on
Ignore Ctrl-C by registering a signal handler function with

#+begin_src js
process.on("SIGINT", ()=>{})
#+end_src

Unhandled Promise rejections are expected to become fatal errors

#+begin_src js
process.on("unhandledRejection", (reason, promise) => {
// reason is whatever value would have been passed to a .catch() function
// promise is the Promise object that rejected
});
#+end_src


*** setUncaughtExceptionCaptureCallback

register a global handler function that will be invoked instead of crashing

#+begin_src js
process.setUncaughtExceptionCaptureCallback(e => {
console.error("Uncaught exception:", e);
});
#+end_src
** [[https://nodejs.org/api/path.html][path]]
*** join
*** basename
**** extname
** net

* Asynchronous
** callbacks
** Promises
** async/await

* Files
** .mjs
If you save your JavaScript code in a file that ends with .mjs, then Node will
always load it as an ES6 module, will expect it to use import and export , and
will not provide a require() function.

** .cjs
save your code in a file that ends with .cjs, then Node will always treat it as
a CommonJS module, will provide a require() function, and will throw a
SyntaxError if you use import or export declarations.

