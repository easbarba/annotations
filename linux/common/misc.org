#+TILE: Unix - Annotations

* TOC
  :PROPERTIES:
  :TOC:      :include all :depth 2 :ignore this
  :END:
  :CONTENTS:
  - [[#fortschritt][Fortschritt]]
    - [[#buch][Buch]]
  - [[#infra-provisioning][Infra Provisioning]]
    - [[#cloudformation][CloudFormation]]
    - [[#pulumi][Pulumi]]
    - [[#terraform][Terraform]]
  - [[#configuration-management][Configuration Management]]
    - [[#terms][terms]]
    - [[#alternatives][alternatives]]
  - [[#containers][Containers]]
    - [[#images][Images]]
  - [[#orchestration][Orchestration]]
    - [[#kubernetes-k8s][Kubernetes (k8s)]]
  - [[#cloud-providers][Cloud Providers]]
    - [[#heroku][Heroku]]
    - [[#azure][Azure]]
    - [[#aws][AWS]]
  - [[#linux][Linux]]
    - [[#progresso][Progresso]]
    - [[#text-manipulation][Text Manipulation]]
    - [[#process-monitoring][Process Monitoring]]
    - [[#df][Df]]
    - [[#strace][strace]]
    - [[#dstrace][dstrace]]
    - [[#multiplexers][Multiplexers]]
    - [[#firewall][Firewall]]
    - [[#lvm][LVM]]
    - [[#swap][Swap]]
    - [[#systemd][SystemD]]
    - [[#disk-space-and-partition][Disk Space and Partition]]
    - [[#sync][Sync]]
    - [[#laptop][Laptop]]
    - [[#boot][Boot]]
    - [[#xorg][X.org]]
    - [[#network][Network]]
    - [[#containers-virtualization][Containers, Virtualization]]
    - [[#terminal][Terminal]]
    - [[#home][$HOME]]
    - [[#commands][Commands]]
    - [[#packages][Packages]]
    - [[#udev-rules-udevrulesd][Udev rules (udev/rules.d)]]
  - [[#cicd][CI/CD]]
    - [[#gitlab][Gitlab]]
    - [[#github-actions][Github Actions]]
    - [[#circle-ci][Circle CI]]
    - [[#jenkins][Jenkins]]
  - [[#virtual-machine][Virtual Machine]]
  - [[#web-server][Web Server]]
    - [[#apache][Apache]]
    - [[#nginx][Nginx]]
  - [[#toolings][Toolings]]
    - [[#hcl][Hcl]]
  - [[#version-control][Version Control]]
    - [[#git][Git]]
  - [[#shell][Shell]]
    - [[#gnu-bash][GNU Bash]]
    - [[#bash-resources][Bash resources]]
    - [[#fish][Fish]]
    - [[#zsh][Zsh]]
    - [[#tcsh][TCSH]]
    - [[#posix][Posix]]
  - [[#compilers][Compilers]]
    - [[#gnu-gcc][GNU GCC]]
    - [[#clang][Clang]]
  - [[#editors][Editors]]
    - [[#nano][Nano]]
    - [[#vimneovim][Vim/NeoVim]]
    - [[#emacs][Emacs]]
  - [[#network][Network]]
    - [[#protocols][Protocols]]
    - [[#terms][Terms]]
  - [[#concepts][Concepts]]
  - [[#skills][Skills]]
  - [[#concepts][Concepts]]
  - [[#sites][Sites]]
  - [[#distros][Distros]]
    - [[#apt][APT]]
    - [[#rpm][RPM]]
    - [[#gentoo][Gentoo]]
    - [[#functional][Functional]]
  - [[#yet-to-learn][Yet to learn]]
  - [[#software][Software]]
    - [[#onlines][Onlines]]
    - [[#media][Media]]
    - [[#browser][Browser]]
  :END:
* Progress
** Books
| Books                                         | capitulo                                   | em                             | @later | revisao |
|-----------------------------------------------+--------------------------------------------+--------------------------------+--------+---------|
| Unix Environment                              | 2 File System                              | 2.5 Inodes                     |        |         |
| Linux Programming Interface                   | Fundamental Concepts                       | Process                        |        |         |
| Modern Operating Systems                      | Introduction                               | 1.2 TYPES OF COMPUTER NETWORKS |        |         |
| UNIX and Linux System Administration Handbook |                                            |                                |        |         |
| LPIC                                          | Part II Exam / Chapter 6 Configuring the X | Configuring Basic X Features   |        |         |
| The Art of Unix programming                   | 2 History                                  |                                |        |         |
| RHCSA Red Hat Enterprise Linux 8              | Basic File Management                      |                                |        |         |

* Internals
** Process
   kernel space
   user space
* LVM
  # remount lvm volumes
  # vgscan --mknodes
  # lvchange -a y /dev/VolGroup00/home
  # lvchange -a y /dev/VolGroup00/swap

* Swap
  { Swap File }

  #2 Create Storage File (2GB)
  sudo dd if=/dev/zero of=/mnt/swapfile bs=1MB count=2000

  Step #3: Secure swap file
  sudo chmod 600 /mnt/swapfile

  Step #4: Set up a Linux swap area
  sudo mkswap /mnt/swapfile

  Step #5: Enabling the swap file
  sudo swapon /mnt/swapfile

  Step #6: Update /etc/fstab file
  /mnt/swapfile swap swap defaults 0 0
  UUID=2176ee83-1c3e-4a48-8dd0-4a12a3e7fe7b
  How do I verify swap is activated or not?
  swapon  -s
  or
  free -m
  or
  cat  /proc/swaps

* Disk Space and Partition
  # df - report file system disk space usage
  # du - estimate file space usage
  # dd - convert and copy a file

  # Writing iso to usb with DD
  sudo dd bs=4M if=/path/to/distro.iso of=/dev/sdx status=progress oflag=sync

  # How to Change UUID of Partition in Linux Filesystem
  umount /dev/sdb1
  tune2fs /dev/sdb1 -U random /dev/sdb1 # blkid | grep sdb1
  mount /dev/sdb1

  # Erase UsbStick contents
  sudo umount -f /dev/sdb
  sudo parted /dev/sdb mklabel msdos
  sudo parted -a none /dev/sdb mkpart  primary fat32 0 20484
  sudo mkfs.vfat -n "MACHO" /dev/sdb1

  # List devices
  $ lsblk - list block devices
  $ fdisk - manipulate disk partition table

  # Reboot and Poweroff without sudo add to /etc/sudoers:
  # user hostname =NOPASSWD: /usr/bin/systemctl poweroff,/usr/bin/systemctl halt,/usr/bin/systemctl reboot

* X.org
** X11 (xorg.conf.d)
*** 70-synaptics.conf
    #+begin_src conf
    Section "InputClass"
    Identifier "touchpad"
    Driver "synaptics"
    MatchIsTouchpad "on"
    Option "TapButton1" "1"
    Option "TapButton2" "3"
    Option "TapButton3" "2"
    Option "VertEdgeScroll" "on"
    Option "VertTwoFingerScroll" "on"
    Option "HorizEdgeScroll" "on"
    Option "HorizTwoFingerScroll" "on"
    Option "CircularScrolling" "on"
    Option "CircScrollTrigger" "2"
    Option "EmulateTwoFingerMinZ" "40"
    Option "EmulateTwoFingerMinW" "8"
    Option "CoastingSpeed" "0"
    Option "FingerLow" "30"
    Option "FingerHigh" "50"
    Option "MaxTapTime" "125"
    EndSection

    #+end_src
** Xwrapper.conf
   allowed_users=anybody
** setxkbmap
   The list of predefined remapping options is in
   less /usr/share/X11/xkb/rules/evdev.lst

   eg: swap left alt and left crtl
   setxkbmap -option  ctrl:swap_lalt_lctlcac

   trace - trace system calls and signals

   man 7 signal

   Use your favorite desktop keyboard layout switcher applet. You can also switch the layout from the terminal, e. g.:
   setxkbmap us
   setxkbmap br

* Network
** rc.conf
   #+begin_src conf
   moused_enable="YES"
   dbus_enable="YES" # windowns manager
   hald_enable="YES" # windowns manager
   kld_list="i915kms" # intel

   #+end_src
** Networks Toolings
*** ip
    | command | ...         |
    |---------+-------------|
    | link    | Mac Address |
    |         |             |

** KdeConnect
   qdbus org.kde.kdeconnect /modules/kdeconnect/devices//sftp getDirectories
   qdbus org.kde.kdeconnect /modules/kdeconnect/devices//sftp mountAndWait

* Containers, Virtualization
** Qemu & KVM
*** Configuring
    sudo groupadd libvirt
    sudo groupadd libvirt-qemu
    sudo groupadd kvm
    sudo adduser "$USER" libvirt
    sudo adduser "$USER" libvirt-qemu
    sudo adduser "$USER" kvm

    Add (kvm) and (kvm-intel) to /etc/modules or temporarily active both kernel modules: # sudo modprobe kvm & # sudo modprobe kvm-intel (https://wiki.ubuntu.com/kvm)

    Uncomment (user) and (group) and set them to (root) (etc/libvirt/qemu.conf)

*** Creating an image : To set up your own guest OS image, you first need to create a blank disc image.
    qemu-img create -f qcow2 distro.img 25G
*** Uefi Support with ovmf
    cp /usr/share/OVMF/OVMF_VARS.fd OVMF_VARS.fd
*** Boot Qemu with UEFI support
    qemu-system-x86_64 -m 4G -vga qxl \
    -drive if=pflash,format=raw,readonly,file=/usr/share/OVMF/OVMF_CODE.fd \
    -drive if=pflash,format=raw,file="$HOME"/Temps/distros/OVMF_VARS.fd \
    -enable-kvm \
    -hda "$HOME"/Temps/distros/distro.img  \
    -cdrom "$HOME"/Temps/distros/CentOS-7-x86_64-Minimal-1804.iso &
*** System76 way
    cp /usr/share/OVMF/OVMF_VARS.fd example_OVMF_VARS.fd
    qemu-img create -f qcow2 example.qcow2 16G
    qemu-system-x86_64 -m 4G -enable-kvm -vga qxl \
    -drive if=pflash,format=raw,readonly,file=/usr/share/OVMF/OVMF_CODE.fd \
    -drive if=pflash,format=raw,file=example_OVMF_VARS.fd \
    -drive if=virtio,file=example.qcow2 \
    -cdrom xenial-desktop-amd64.iso
*** libvirt: The virtualization API
*** virt-manager: Desktop tool for managing virtual machines via libvirt
*** QEMU Manual & articles
    https://www.qemu.org/
    https://qemu.weilnetz.de/doc/qemu-doc.html

    https://wiki.archlinux.org/index.php/QEMU
    https://en.wikibooks.org/wiki/QEMU/Images
    https://ycnrg.org/vga-passthrough-with-ovmf-vfio/

*** Legacy
    KVM:-enable-kvm
    qemu-system-x86_64 -m 1G -hda temp.img -cdrom guixsd-install-0.14.0.x86_64-linux.iso -boot d

*** Setting up
    # sudo groupadd libvirt
    # sudo groupadd libvirt-qemu
    # sudo groupadd kvm
    # sudo adduser "$USER" libvirt
    # sudo adduser "$USER" libvirt-qemu
    # sudo adduser "$USER" kvm
    # add (kvm) and (kvm-intel) to /etc/modules or temporarily active both kernel modules: # sudo modprobe kvm & # sudo modprobe kvm-intel (https://wiki.ubuntu.com/kvm)
    # Uncomment (user) and (group) and set them to (root) (etc/libvirt/qemu.conf)

*** Windows
    <OriansJ> USER: the big problem we had was with fully encrypted /boot partitions is qemu with hardware acceleration tended to have a hashing
    bug, preventing the images from booting.  [20:32]
    <USER> hum...
    <OriansJ> But if /boot isn't encrypted but / is; the linux luks module works fine enough for proper boot
    <OriansJ> and unhardware accelerated qemu on Windows is very very painful for GUI work
    <OriansJ> a shell only image is a little slow but not painfully so but gnome is like watching paint dry  [20:34]
** Virtualbox
   VirtualBox kernel modules do not match the version of VirtualBox. Executing /sbin/vboxconfig ...
   Solution: vboxreload

   --------------------
   From my experience Guest Additions that are bundled with VirtualBox work better. Here are steps to install them:

   Install kernel headers (installer needs them to build the kernel module):

   $ sudo apt-get update
   $ sudo apt-get install build-essential linux-headers-$(uname -r)

   Insert the virtual CD using appropriate menu item in VirtualBox menu:

   Menu screenshot

   Mount the CD:

   $ sudo mount /dev/cdrom /media/cdrom

   cd into the mounted directory:

   $ cd /media/cdrom

   Run the installer:

   $ sudo ./VBoxLinuxAdditions.run

   Or alternatively, if you really want to install from repository, try to find the package by name

   $ sudo apt-cache pkgnames | grep virtualbox

   virtualbox-ose-guest-utils is available for me, so is virtualbox-guest-utils (they should be identical since VirtualBox 4.0).

   ------------------
* Terminal
  http://www.gnu.org/prep/standards/html_node/Command_002dLine-Interfaces.html
** Coreutils:
   https://git.savannah.gnu.org/cgit/coreutils.git
*** MAKE
    after populating /usr/loca cal for ldconfig: ldconfig - configure dynamic linker run-time bindings
    ldconfig /usr/local/lib
*** Grep
**** Grep read later
     https://www.cyberciti.biz/faq/grep-regular-expressions/

* XDG
** https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
** Applications Desktop Files
   /usr/share/applications/
   xdg-settings set default-web-browser google-chrome.desktop
* Commands
  | command        |                                  |
  |----------------+----------------------------------|
  | lsb_release -a | distro info                      |
  | ldd            | print shared object dependencies |
  | ldconfig       |                                  |

* man
  - errno: number of last error
* Udev rules
** udev/rules.d
** brightnessctl
*** backlight.rules
    get backlight device: brightnessctl -l
    add user to VIDEO: usermod -aG video $USER
    #+begin_src conf
    ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="<intel_backlight>", RUN+="/bin/chgrp video /sys/class/backlight/%k/brightness"
    ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="<intel_backlight>", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"
    #+end_src
* Further reading
Further information
Modern texts covering operating systems concepts and design, with particular ref-
erence to UNIX systems, include [Tanenbaum, 2007], [Tanenbaum & Woodhull,
2006], and [Vahalia, 1996], the last of these containing much detail on virtual mem-
ory architectures. [Goodheart & Cox, 1994] provide details on System V Release 4.
[Maxwell, 1999] provides an annotated listing of selected parts of the Linux 2.2.5
kernel. [Lions, 1996] is a detailed exposition of the Sixth Edition UNIX source
code that remains a useful introduction to UNIX operating system internals.
