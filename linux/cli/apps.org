#+TITLE: UNIX-like cli apps

* Users
** adduser
** usermod

* Files
** rsync
#+begin_src sh
rsync -avz /from /to
#+end_src
** tree
|    |                                              |
|----+----------------------------------------------|
| -a | Includes hidden files in the output          |
| -d | Excludes files from the output               |
| -h | Displays file sizes in human-friendly format |
| -f | Prints the full path for each file           |
| -p | Includes file permissions in the output      |

** ls
 list directory contents

 | options |                     |
 |---------+---------------------|
 | -l      | long list           |
 | -a      | list dotfiles too   |
 | -t      | list in time order  |
 | -u      | sort by access time |
 | -U      | do not sort         |
 | -r      | reverse             |
 | -F      | only dir            |
 | -A      | almostall           |

#+begin_src shell
✦ ❯ ls -l /proc/753237/exe
lrwxrwxrwx 1 $USER users 0 Oct 18 15:30 /proc/753237/exe -> /nix/store/psbr5ybj16cgdyccc38plkpx3gzcad3w-mpv-0.33.1/bin/mpv
#+end_src

** du
estimate file space usage

|    |                                                  |
|----+--------------------------------------------------|
| -h | print sizes in human readable format             |
| -a | write counts for all files, not just directories |
| -s | display only a total for each argument           |
** ncdu
** mv
move, or rename, files

|                         |   |
|-------------------------+---|
| oldname newname         |   |
| oldlocation newlocation |   |
| -i                      |   |
| -f                      |   |

** cp
copy files and directories

** rm
remove files or directories

|                       |                   |
|-----------------------+-------------------|
| -f                    |                   |
| -i                    |                   |
| -I                    |                   |
| -r or -R              |                   |
| -d                    | remove empty dir  |
| --preserve-root[=all] | do not remove '/' |
** ln
|    |   |
|----+---|
| -s |   |

* Network
** whois
* Permissions
** chroot
** umask

** chmod
|    |                                                    |
|----+----------------------------------------------------|
| -R | change files and directories recursively           |
| -c | like verbose but report only when a change is made |
|    |                                                    |

* Compression/Decompression
** gzip / gunzip


#+begin_src shell
gzip .history
gunzip .history.gz

#for more info
gzip .history
#+end_src

|    |   |
|----+---|
| -r |   |

** bzip2 / bunzip2


#+begin_src shell
bzip2 fstab
bunzip2.bz2
#+end_src

** tar
an archiving utility

|    |   |
|----+---|
| -f |   |
| -c |   |
| -p |   |
| -r |   |
| -t |   |
| -u |   |
| -v |   |
| -x |   |
| -z |   |

#+begin_src shell
tar -cvf videos.tar ~/Videos
tar -cvf /tmp/meh.tar /etc/debian-version

# append
tar -rvf /tmp/meh.tar /etc/fstab

# peek contents
tar -tvf /tmp/meh.tar

# extract one file
tar -xf /tmp/meh.tar /etc/fstab

# extract all
tar -xf /tmp/meh.tar
#+end_src

#+begin_src shell
tar -rvf /tmp/meh.gz /etc/fstab
tar -rvf /tmp/meh.bz2 /etc/fstab

tar -tf /tmp/meh.bz2
tar -xf /tmp/meh.bz2
#+end_src

* File system
** findmnt
** lsblk
** df
report file system space usage

|    |                                                      |
|----+------------------------------------------------------|
| -h | print sizes in powers of 1024                        |
| -x | limit listing to file systems not of type TYPE       |
| -a | include pseudo, duplicate, inaccessible file systems |
* Xorg
** xmodmap
|         |                                    |
|---------+------------------------------------|
| -pke    |                                    |

** setxkbmap
|         |                                    |
|---------+------------------------------------|
| -option | reset current session modification |
|         |                                    |

** xinput
- list the devices
#+begin_src shell
 xinput --list
#+end_src

- list details for the mouse (id=3)
 #+begin_src shell
xinput --list-props 3
 #+end_src

- Disable the mouse:
#+begin_src shell
$ export DISPLAY=:0
$ xinput set-int-prop 3 "Device Enabled" 8 0
#+end_src

** xandr
|           |   |
|-----------+---|
| -q        |   |
| --current |   |
* Media
** ffmpeg
*** increase volume
#+begin_src shell
ffmpeg -i TUNE.ogg -filter:a "volume=5dB" TUNE_increased.ogg
#+end_src

* Information
** man
|    |   |
|----+---|
| -k |   |
| -f |   |
** apropos
search the manual page names and descriptions
** info
** pinfo
** whatis
* Partition
** parted
** gdisk
** fdisk

* Process
** htop
** killall
** ps
|   |   |
|---+---|
| u |   |
| x |   |

** kill
send a signal to a process

| signal numbers | signal name      |
|----------------+------------------|
|              0 | kill all process |
|              1 | SIGHUP           |
|              9 | SIGKILL          |
|             15 | SIGTERM          |
** pgrep
look up, signal, or wait for processes based on name and other attributes
** pkill
** pwait
** nice
run a program with modified scheduling priority
#+begin_src shell
nice expensive-command &
#+end_src
** nohup
run a command immune to hangups, with output to a non-tty
#+begin_src shell-script
nohup command &
#+end_src
* Multiplexer
** tmux
** screen
** tty
print the file name of the terminal connected to standard input
** tty console
*** set bigger fonts
edit FONTSIZE in /etc/default/console-setup to one of these: 6x12, 8x14, 8x16, 10x20, 11x22, 12x24, 14x28, and 16x32

* write
Send a message to another user.

* mesg
Control write access of other users to your terminal.

* news
* open
open file in its default application
* uname
|    |   |
|----+---|
| -a |   |
| -r |   |
| -s |   |
| -v |   |
| -m |   |
| -p |   |
| -i |   |
* lscpu
* dirs
print directory stack
* popd
move through directory stack
* watch
watch runs command repeatedly, displaying its output and errors (the first
screenfull). This allows you to watch the program output change over time. By
default, command is run every 2 seconds and watch will run until inter‐ rupted.
* uptime
* finger
* ed
|              |                                                    |
|--------------+----------------------------------------------------|
| a            | append text in next line                           |
| i            | enter insert mode in the beginning of current line |
| .            | stop adding text                                   |
| q            | quit                                               |
| w <filename> | write to file with name                            |
| p            | print current line                                 |
| n            | print current line number and text                 |
| <n>          | print line in number <n>                           |
| c            | change content line                                |
| h            | display error messages                             |
| ?            | command not available                              |
| P            | set prompt                                         |
| <n>t<n>      | copy line <n> in line <n>                          |
| /<word>      | search for word in file                            |
| 1,$p         | display all lines till the end of file             |


#+begin_src shell-script
0 meh
1 hahaha
2 kkkkkkkkk

2t0 # copy line 2 to line 0
#+end_src
* cat
concatenate files and print on the standard output
|    |            |
|----+------------|
| -u | unbuffered |
| <> | buffered   |
* tac

* pr
concatenate files and print on the standard output
|                  |                         |
|------------------+-------------------------|
|               -3 | print in three columns  |
| -m <file> <file> | print files in parallel |
|                  |                         |

* lpr

* more
* tee
#+begin_src shell
echo '%podman ALL=(ALL) NOPASSWD: /usr/bin/podman' | sudo tee -a /etc/sudoers.d/podman
#+end_src
* nroff

* troff

* file
* wc
print newline, word, and byte counts for each file

* search
** find
-type

all dirs

#+begin_src shell
find . -type d
#+end_src


all files
#+begin_src shell
find . -type f
#+end_src

-name
 find all files with extension in folder

#+begin_src shell
find . -type f -name "*.txt"
#+end_src

-exec

#+begin_src shell
find /home/usertest -name *.php -exec rm {} \;
#+end_src

-perm

#+begin_src shell
find /home/usertest -type f -perm 0777 -print -exec chmod 644 {} \;
#+end_src

-user

#+begin_src shell
find /home/usertest -user codigofonte -iname "*.txt"
#+end_src


-size

#+begin_src shell :results output
find /home/usertest -size +150M –exec rm -rf {} \;
#+end_src
#+RESULTS:

** ripgrep
** grep
| option              | description                                                                                                 |
|---------------------+-------------------------------------------------------------------------------------------------------------|
| -v                  | lines that doesnt match pattern                                                                             |
| --exclude-dir=<DIR> |                                                                                                             |
| -P                  | perl regex                                                                                                  |
| -m <int>            | stop at                                                                                                     |
| -q                  | quiet                                                                                                       |
| -L                  | print the name of each input file from which no output  would  normally have been printed.                  |
| -o                  | Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line. |
|                     |                                                                                                             |

* type
* whereis
* which
* command
|    |   |
|----+---|
| -v |   |
* comm
compare two sorted files line by line
* dbus
** dbus-launch
Utility to start a message bus from a shell script
** dbus-monitor
debug probe to print message bus messages
* sort
|    |   |
|----+---|
| -r |   |
| -n |   |
| -f |   |
| +n |   |
* exec
 execute command in current process
* cal
display a calendar
* tail
output the last part of files
* head
* mount
* images
** imagemagick
* camp
compare two files byte by byte
* diff
compare files line by line
* pwd
* od
dump files in octal and other formats
|    |   |
|----+---|
| -c |   |
| -b |   |
|    |   |
* stty
* read
read line of input into variables
* cd
* mkdir
* shell
* echo
display a line of text

#+begin_src shell
echo * # echo all files in dir
echo .bash* # echo all files beginning with '.bash'

#+end_src
* make
|                 |                                                                 |
|-----------------+-----------------------------------------------------------------|
| .DEFAULT_GOAL   | deﬁnes which target is run when no target is speciﬁed.          |
| <word>:         | name of the target                                              |
| <word>: <word2> | other targets that must be run before the speciﬁed target runs. |
| .PHONY:<word>   | <word> doesn't represent a file name in this Makefile           |
|                 |                                                                 |
* scp
OpenSSH secure file copy
* at
at, batch, atq, atrm - queue, examine, or delete jobs for later execution

* recutils
** recsel
print records from a recfile
* parallel
* xargs
#+begin_src shell-script
echo 'Meh' | xargs -I {} echo 'Ultra {}' # ultra Meh

#+end_src
* sed
#+begin_src shell

sed -i 's/Meh/Foo/g'
#+end_src
* sshuttle
* crypt
* pv
* fzf
* fd
* midnight
* cron
* tr
Translate, squeeze, and/or delete characters from standard input, writing to standard output.

|              |                                             |
|--------------+---------------------------------------------|
| -d, --delete | delete characters in SET1, do not translate |
|              |                                             |

#+begin_src shell

echo '"Arch Linux"' | tr -d '"' # 'Arch Linux'
#+end_src
* cut
Print selected parts of lines from each FILE to standard output.

With no FILE, or when FILE is -, read standard input.

Mandatory arguments to long options are mandatory for short options too.

|                       |                                                                                                                         |
|-----------------------+-------------------------------------------------------------------------------------------------------------------------|
| -f<n> --fields=LIST   | select  only these fields;  also print any line that contains no delimiter character, unless the -s option is specified |
| -d, --delimiter=DELIM | use DELIM instead of TAB for field delimiter                                                                                                                        |


#+begin_src shell

echo 'NAME="Arch Linux"' | cut -f2 -d '=' # "Arch Linux"

#+end_src
* date
** week number
#+begin_src shell
date +%V
#+end_src
* ts
* stat

* Text Manipulation
** grep
** seq
** awk
** soft
** uniq
** cat
* Process Monitoring
** Ps
** Htop
** Top
* Misc
** write
Send a message to another user.
** mesg
Control write access of other users to your terminal.
** news
** devilspie
    get_window_name()
     returns a string containing the name of the current window.

    get_application_name()
    returns the application name of the current window.

    set_window_position(xpos, ypos)
    Sets the position of a window.

    set_window_size(xsize, ysize)
    Sets the size of a window.

    set_window_geometry(xpos, ypos, xsize ysize)
    Set the geometry of a window.

    make_always_on_top()
    Set the windows always on top flag.

    set_on_top()
    Sets a window on top of the others (this will however not lock the window in this position).

    debug_print()
    Debug helper that prints a string to stdout. It is only printed if devilspie2 is run with the --debug option.

    shade()
    "Shades" a window, showing only the title-bar.

    unshade()
    Unshades a window - the opposite of "shade"

    maximize()
    maximizes a window

    unmaximize()
    unmaximizes a window

    maximize_vertically()
    maximizes the current window vertically.

    maximize_horisontally()
    maximizes the current window horisontally.

    minimize()
    minimizes a window

    unminimize()
    unminimizes a window, that is bringing it back to screen from the minimized position/size.

    decorate_window()
    Shows all window decoration.

    undecorate_window()
    Removes all window decorations.

    set_window_workspace(number)
    Moves a window to another workspace. The number variable starts counting at 1.

    change_workspace(number)
    Changes the current workspace to another. The number variable starts counting at 1.

    pin_window()
    asks the window manager to put the window on all workspaces.

    unpin_window()
    Asks the window manager to put window only in the currently active workspace.

    stick_window()
    Asks the window manager to keep the window's position fixed on the screen, even when the workspace or viewport scrolls.

    unstick_window()
    Asks the window manager to not have window's position fixed on the screen when the workspace or viewport scrolls.
** cut
** cat
    |    |                 |
    |----+-----------------|
    | -n | display numbers |
    | -e | shows endline   |

** fsck
** who
** w
** ps
    ps auxwww | grep sshd: | grep -v grep
** ss
    ss | grep -i ssh
** last
    last -a | grep -i still
** fc-cache
    |                        |                  |
    |------------------------+------------------|
    | fc-list : family style | get font family  |
    | fc-cache -fv           | reload all fonts |
    |                        |                  |
** man
    - mandb: perform a keyword search on manual: man -k <TERM>
** uname
    |          |                        |
    |----------+------------------------|
    | uname -a | all system information |
    |          |                        |
** tty
** uptime
** lscpu
** pwd
    returns working directory
** lsof
** sysctl
** gpg
*** set up
     gpg --full-generate-key
     RSA
     4096 bits
*** list keys
     gpg --list-secret-keys --keyid-format LONG
 ***
** Df
** strace
** dstrace
* Multiplexers
** Tmux
** GNU Screen
* Getters
** wget
** curl
* Text Manipulation
** grep
** seq
** awk
** soft
** uniq
** cat
* Process Monitoring
** Ps
** Htop
** Top
* Misc
** write
Send a message to another user.
** mesg
Control write access of other users to your terminal.
** news
** devilspie
    get_window_name()
     returns a string containing the name of the current window.

    get_application_name()
    returns the application name of the current window.

    set_window_position(xpos, ypos)
    Sets the position of a window.

    set_window_size(xsize, ysize)
    Sets the size of a window.

    set_window_geometry(xpos, ypos, xsize ysize)
    Set the geometry of a window.

    make_always_on_top()
    Set the windows always on top flag.

    set_on_top()
    Sets a window on top of the others (this will however not lock the window in this position).

    debug_print()
    Debug helper that prints a string to stdout. It is only printed if devilspie2 is run with the --debug option.

    shade()
    "Shades" a window, showing only the title-bar.

    unshade()
    Unshades a window - the opposite of "shade"

    maximize()
    maximizes a window

    unmaximize()
    unmaximizes a window

    maximize_vertically()
    maximizes the current window vertically.

    maximize_horisontally()
    maximizes the current window horisontally.

    minimize()
    minimizes a window

    unminimize()
    unminimizes a window, that is bringing it back to screen from the minimized position/size.

    decorate_window()
    Shows all window decoration.

    undecorate_window()
    Removes all window decorations.

    set_window_workspace(number)
    Moves a window to another workspace. The number variable starts counting at 1.

    change_workspace(number)
    Changes the current workspace to another. The number variable starts counting at 1.

    pin_window()
    asks the window manager to put the window on all workspaces.

    unpin_window()
    Asks the window manager to put window only in the currently active workspace.

    stick_window()
    Asks the window manager to keep the window's position fixed on the screen, even when the workspace or viewport scrolls.

    unstick_window()
    Asks the window manager to not have window's position fixed on the screen when the workspace or viewport scrolls.
** cut
** cat
    |    |                 |
    |----+-----------------|
    | -n | display numbers |
    | -e | shows endline   |

** fsck
** who
** w
** ps
    ps auxwww | grep sshd: | grep -v grep
** ss
    ss | grep -i ssh
** last
    last -a | grep -i still
** fc-cache
    |                        |                  |
    |------------------------+------------------|
    | fc-list : family style | get font family  |
    | fc-cache -fv           | reload all fonts |
    |                        |                  |
** man
    - mandb: perform a keyword search on manual: man -k <TERM>
** uname
    |          |                        |
    |----------+------------------------|
    | uname -a | all system information |
    |          |                        |
** tty
** uptime
** lscpu
** pwd
    returns working directory
** lsof
** sysctl
** gpg
*** set up
     gpg --full-generate-key
     RSA
     4096 bits
*** list keys
     gpg --list-secret-keys --keyid-format LONG
 ***
** Df
** strace
** dstrace
* Multiplexers
** Tmux
** GNU Screen
* Getters
** wget
** curl
