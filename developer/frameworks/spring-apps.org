#+title: Spring Framework - Applications

* Templates
** Thymeleaf
*th:text*

#+begin_src html
<p th:text="${message}">placeholder message</p>
#+end_src

*th:each*
*th:value*
*th:field*

#+begin_src html
<div th:each="ingredient : ${wrap}">
  <input th:field="*{ingredients}" type="checkbox" th:value="${ingredient.id}"/>
  <span th:text="${ingredient.name}">INGREDIENT</span><br/>
</div>
#+end_src

*th:href*

#+begin_src html
<link rel="stylesheet" th:href="@{/styles.css}" />
#+end_src

*th:src*

#+begin_src html
<img th:src="@{/images/TacoCloud.png}"/>
#+end_src

*th:object*

#+begin_src html
<form method="POST" th:object="${taco}">
#+end_src

*th:if*
*th:errors*

#+begin_src html
<span class="validationError"
      th:if="${#fields.hasErrors('ingredients')}"
      th:errors="*{ingredients}">Ingredient Error</span>
#+end_src

*th:action*

#+begin_src html
<form method="POST" th:action="@{/orders}" th:object="${tacoOrder}">
<h1>Order your taco creations!</h1>
</form>
#+end_src

** FreMaker
** Mustache

* Databases
** H2
|             |         |
|-------------+---------|
| artifact-id | h2      |
| scope       | runtime |

*spring*
- pin down database name

#+begin_src conf
spring.datasource.generate-unique-name=false
spring.datasource.name=tacocloud
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.username
spring.datasource.password.
#+end_src

#+begin_src yaml
spring:
  datasource:
    generate-unique-name: false
    name: tacocloud
#+end_src

*connect*
http://localhost:8080/h2-console

* Loggers
** SLF4J
https://www.slf4j.org/

* Objects
** lombok

* Servers
** Tomcat
