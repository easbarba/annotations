#+TITLE: Phoenix

* Progress
** Books
| Books               | Chapter            | @                          |
|---------------------+--------------------+----------------------------|
| Programming Phoenix | 2                  | Environments and Endpoints |
| Phoenix @ hexdocs   | Request life cycle | From endpoint to views     |

** SLOC
| Project | folder      | file      | @ |
|---------+-------------+-----------+---|
| phoenix | lib/phoenix | router.ex |   |

* Base
** Plug
Plug lives at the heart of Phoenix's HTTP layer, and Phoenix puts Plug front and
center. We interact with plugs at every step of the request life-cycle, and the
core Phoenix components like Endpoints, Routers, and Controllers are all just
Plugs internally. Let's jump in and find out just what makes Plug so special.

** Context
Contexts are dedicated modules that expose and group related functionality.

** Routing
Routers are the main hubs of Phoenix applications. They match HTTP requests to
controller actions, wire up real-time channel handlers, and define a series of
pipeline transformations scoped to a set of routes.

*** pipeline

** Controllers
** View
** Templates
*** Embedded Elixir
#+begin_src elixir

<h1>Listing Users</h1>

<table>
  <%= for user <- @users do %>
    <tr>
      <td><%= render "user.html", user: user %></td>
      <td><%= link "View", to: Routes.user_path(@conn, :show, user.id) %></td>
    </tr>
  <% end %>
</table>

#+end_src

** Routers
** ENV VARS
*** MIX_ENV
Set environment. (default: env)
#+begin_src elixir
export MIX_ENV=env
#+end_src

** Config

** Presence / Tracking
** LiveView
* Commands
** routes
display all available routes
#+begin_src elixir
mix phx.routes
#+end_src
** server
You can also run your app inside IEx (Interactive Elixir) as:
#+begin_src elixir
iex -S mix phx.server
#+end_src

same as above but do not run phoenix server
#+begin_src elixir
iex -S mix
#+end_src
* Resources
** Containers
#+begin_src shell
podman run --rm -it -v ${PWD}:/app -w /app elixir:VERSION sh -c 'mix local.hex && mix archive.install hex phx_new && mix phx.new <NAME>'
#+end_src
** new project
#+begin_src shell
elixir -v
psql --version
node --version

mix local.hex
mix archive.install hex phx_new
mix phx.new -v
mix phx.new <NAME>
cd hello
(cd assets && npm install)
mix ecto.create
mix phx.server
#+end_src
** Direnv
Guix Shell

#+begin_src shell
use guixs postgresql elixir node



#+end_src
