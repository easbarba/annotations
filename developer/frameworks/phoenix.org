#+TITLE: Phoenix

* Progress
** Books
| Books               | Chapter            | @                      |
|---------------------+--------------------+------------------------|
| Programming Phoenix | 2                  |                        |
| Phoenix @ hexdocs   | Request life cycle | From endpoint to views |

** SLOC
| Project | folder | file | @ |
|---------+--------+------+---|
| phoenix |        |      |   |
| ecto    |        |      |   |
| plug    |        |      |   |

* Base
** Plug
Plug lives at the heart of Phoenix's HTTP layer, and Phoenix puts Plug front and
center. We interact with plugs at every step of the request life-cycle, and the
core Phoenix components like Endpoints, Routers, and Controllers are all just
Plugs internally. Let's jump in and find out just what makes Plug so special.

** Context
Contexts are dedicated modules that expose and group related functionality.

** Routing
Routers are the main hubs of Phoenix applications. They match HTTP requests to
controller actions, wire up real-time channel handlers, and define a series of
pipeline transformations scoped to a set of routes.

*** pipeline

** Controllers
** View
** Templates
*** Embedded Elixir
#+begin_src elixir

<h1>Listing Users</h1>

<table>
  <%= for user <- @users do %>
    <tr>
      <td><%= render "user.html", user: user %></td>
      <td><%= link "View", to: Routes.user_path(@conn, :show, user.id) %></td>
    </tr>
  <% end %>
</table>

#+end_src

** Routers
** ENV VARS
*** MIX_ENV
** Config

** Presence / Tracking
** LiveView
* Commands
Set environment. (default: env)
#+begin_src elixir
export MIX_ENV=env
#+end_src

You can also run your app inside IEx (Interactive Elixir) as:
#+begin_src elixir
iex -S mix phx.server
#+end_src

same as above but do not run phoenix server
#+begin_src elixir
iex -S mix
#+end_src

see all available routes
#+begin_src elixir
mix phx.routes
#+end_src

* Packages
** Ecto
*** Via iex
#+begin_src elixir
alias Rumbl.Repo
alias Rumbl.Accounts.User

Repo.insert(%User{name: "Bruce", username: "redrapids"})
Repo.all User
Repo.get User,1

#+end_src

