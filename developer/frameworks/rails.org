#+TITLE: Ruby On Rails

* Summary
:PROPERTIES:
:TOC:      :include all
:END:
:CONTENTS:
- [[#summary][Summary]]
- [[#progress][Progress]]
  - [[#books][Books]]
  - [[#sloc][SLOC]]
- [[#commands][Commands]]
  - [[#database][database]]
  - [[#new][new]]
  - [[#test][test]]
  - [[#destroy][destroy]]
  - [[#routes][routes]]
  - [[#generate][generate]]
    - [[#resource][resource]]
    - [[#scaffold][scaffold]]
    - [[#models][models]]
  - [[#server][server]]
  - [[#misc][misc]]
  - [[#tasks][tasks]]
  - [[#log][log]]
  - [[#migration][migration]]
  - [[#console][console]]
    - [[#reload][reload!]]
- [[#bin][bin]]
  - [[#run][run]]
  - [[#setup][setup]]
  - [[#rails][rails]]
  - [[#ci][ci]]
- [[#models][Models]]
  - [[#validations][validations]]
    - [[#validates][validates]]
    - [[#validate][validate]]
  - [[#concerns][concerns]]
  - [[#best-pratices][best pratices]]
    - [[#fat-models][fat models]]
- [[#routes][Routes]]
- [[#controller][Controller]]
  - [[#methods][methods]]
    - [[#layout][layout]]
- [[#parameters][Parameters]]
- [[#views][Views]]
  - [[#templates][Templates]]
    - [[#partials][partials]]
  - [[#embedded-ruby][Embedded Ruby]]
    - [[#evaluation-embedding-tags--][evaluation embedding tags <% %>]]
    - [[#output-embedding-tags--][output embedding tags <%= %>]]
- [[#html-templates][HTML Templates]]
- [[#session][Session]]
- [[#helpers][Helpers]]
  - [[#formhelper][FormHelper]]
    - [[#label][label]]
    - [[#text_field][text_field]]
    - [[#text_area][text_area]]
    - [[#datetime_select][datetime_select]]
  - [[#formtaghelper][FormTagHelper]]
  - [[#number-helpers][Number helpers]]
  - [[#text-helpers][Text helpers]]
  - [[#url-helpers][URL helpers]]
- [[#enviroment][Enviroment]]
- [[#logger][Logger]]
  - [[#methods][Methods]]
- [[#debugging][Debugging]]
  - [[#views][Views]]
  - [[#-console-][<% console %>]]
- [[#components][Components]]
  - [[#action-cable][Action Cable]]
    - [[#concept][concept]]
    - [[#cli][cli]]
- [[#active-record][Active Record]]
  - [[#methods][methods]]
  - [[#associations][associations]]
  - [[#exceptions][exceptions]]
  - [[#validations][Validations]]
  - [[#callbacks][Callbacks]]
    - [[#before_create][before_create]]
    - [[#after_create][after_create]]
    - [[#before_save][before_save]]
    - [[#after_save][after_save]]
    - [[#before_destroy][before_destroy]]
    - [[#after_destroy][after_destroy]]
  - [[#migrations][Migrations]]
  - [[#migration][Migration]]
    - [[#drop_table][drop_table]]
  - [[#filters][Filters]]
  - [[#query-interface][Query Interface]]
  - [[#finding][Finding]]
    - [[#sql-syntax][SQL Syntax]]
    - [[#array-condition-syntax][Array Condition Syntax]]
    - [[#association-proxies][Association Proxies]]
    - [[#more][more]]
    - [[#methods][methods]]
      - [[#where][where]]
      - [[#find][find]]
      - [[#findby][findby]]
      - [[#order][order]]
      - [[#limit][limit]]
      - [[#joins][joins]]
      - [[#includes][includes]]
  - [[#default-scope][Default Scope]]
  - [[#named-scope][Named Scope]]
  - [[#seeds][Seeds]]
    - [[#methods][methods]]
- [[#action-text][Action Text]]
- [[#active-storage][Active Storage]]
- [[#action-pack][Action Pack]]
- [[#action-controller][Action Controller]]
- [[#action-view][Action View]]
- [[#action-dispatch][Action Dispatch]]
- [[#cache][Cache]]
- [[#tests][Tests]]
  - [[#rspec][RSpec]]
  - [[#unit][Unit]]
- [[#traits][Traits]]
  - [[#rest][REST]]
  - [[#json][JSON]]
  - [[#terms][Terms]]
- [[#internationalization][Internationalization]]
  - [[#methods][methods]]
- [[#external-toolings][External Toolings]]
  - [[#direnv][Direnv]]
  - [[#docker][Docker]]
    - [[#docker-compose][docker-compose]]
:END:
* Progress
** Books
|                         |                         |                                                    |
|-------------------------+-------------------------+----------------------------------------------------|
| Agile WebDev w/ Rails 6 | Task C: Catalog Display |                                                    |
| Beginning Rails 6       | Active Storage          | Updating the Article View                          |
| Sustainable Rails       | 7 HTML Templates        | 7.2.1Name the Instance Variable After the Resource |

** SLOC
|       |                                      |                 |
|-------+--------------------------------------+-----------------|
| rails | actioncable/lib/action_cable/channel | broadcasting.rb |

* Commands
** database
| cmd                             | desc                                                                          |
|---------------------------------+-------------------------------------------------------------------------------|
| dbconsole                       |                                                                               |
| console                         |                                                                               |
| db:create                       |                                                                               |
| db:create:all                   | create test,production and development database                               |
| db:migrate                      | create schema                                                                 |
| db:rollback                     | rollback recently created schema                                              |
| db:load_config                  |                                                                               |
| db:check_protected_environments |                                                                               |
| db:truncate_all                 |                                                                               |
| db:system:change                | switch databases                                                              |
| db:seed                         |                                                                               |
| db:seed:replant                 | truncates tables of each database for current environment and loads the seeds |
| db:setup                        | recreate database and adds the seed data as you may expect.                   |
| db:reset                        | drop database, recreates it, loads the schema, and seeds your database        |
** new
| how               | desc                                              |
+-------------------+---------------------------------------------------|
| â€“d or --database= | use the database management system of your choice |
| new <name>        |                                                   |


#+begin_src shell
rails _6.1.4.6_ new app --database=postgresql
#+end_src

** test
|                  |   |
|------------------+---|
| test             |   |
| test:controllers |   |
** destroy
| cmd                         | desc |
+-----------------------------+------|
| destroy controller articles |      |
| destroy model Artile        |      |

** routes
|                                        |   |
|----------------------------------------+---|
| -g GROUP, --grep=GROUP                 |   |
| -E, --expanded                         |   |
| -c CONTROLLER, --controller=CONTROLLER |   |

** generate
*** resource
*** scaffold
| how                                 | desc |
+-------------------------------------+------|
| generate scaffold Article <options> |   |
|                                     |   |

*** models
| what   | how                                                                    | desc |
|--------+------------------------------------------------------------------------+------|
| models | generate model <Name>                                                  |      |
|        | destroy controller articles                                            |      |
|        | destroy model Artile                                                   |      |
| a      |                                                                        |      |
|        | generate scaffold Article title:string body:text published_at:datetime |      |
|        |                                                                        |      |

** server
|                               |   |
|-------------------------------+---|
| --binding=[PORT] or -b [PORT] |   |

** misc
| what       | how         | desc |
|------------+-------------+------|
| destroy    | destroy / d |      |
| belongs_to |             |      |

** tasks
Rails 6 uses rake as task runner

|              |                         |
|--------------+-------------------------|
| --task or -T | list all task available |
|              |                         |

** log
|                  |   |
|------------------+---|
| :clear LOGS=test |   |

** migration
|                    |   |
|--------------------+---|
| AddXXXToTABLE      |   |
| RemoveXXXFromTABLE |   |

** console
| what              | how                                                                | desc                                                                                                                               |
|-------------------+--------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------|
| create            | create(title: "foo", body: "bar", published_at: '2020-01-31')      | create new and save to db                                                                                                          |
| save              | a.save  / a.save!                                                  | save object to db / save and show errors                                                                                           |
| new               | a.new                                                              | create an empty object                                                                                                             |
| count             | A.count                                                            |                                                                                                                                    |
| find              | A.find(3) / A.find([4,5])                                          |                                                                                                                                    |
| first             | A.first   / A.first.title                                          |                                                                                                                                    |
| last              | A.last                                                             |                                                                                                                                    |
| all               | A.all / A.all.size / A.all.each { \a\ puts a.title }               | relational collection                                                                                                              |
| order             | A.order(:order) / A.order(:order :desc)                            | order per title / order descedent                                                                                                  |
| where             | A.where(title: 'foo')                                              |                                                                                                                                    |
| update_attributes | update_attributes(title: "foo", published_at: 1.day.ago)           |                                                                                                                                    |
| find_or_create_by |                                                                    | find or if none is found create a db anew                                                                                          |
| <<                | a.x << x                                                           |                                                                                                                                    |
| delete            |                                                                    | donâ€™t instantiate or perform callbacks on the object theyâ€™re deleting. They remove the row immediately from the database.          |
| destroy           | A.destroy(1) / .destroy([3,4])                                     | finds a single row first and then deletes the row /works on the instance                                                           |
| delete_by         |                                                                    |                                                                                                                                    |
| errors            | a.errors.any? / a.errors.full_messages / a.errors.messages[:title] |                                                                                                                                    |
|                   | a.valid?                                                           |                                                                                                                                    |
| routes --expanded |                                                                    |                                                                                                                                    |
| byebug            |                                                                    |                                                                                                                                    |


*** reload!
reloads the Rails application environment within your console session. You need
to call it when you make changes to existing code.
* bin
Useful personal scripts

- brakeman
- bundle-audit
- lograge

** run
correctly forward port in a docker/wm setup
#+begin_src shell
#!/usr/bin/env bash
set -e

# We must bind to 0.0.0.0 inside a
# Docker container or the port won't forward
bin/rails server --binding=0.0.0.0
#+end_src
** setup
** rails
** ci
run tests and quality checks.

- check `bin/setup` idempodency by running that script twice to check.
-

#+begin_src shell
bin/setup # perform the actual setup
bin/setup # ensure setup is idempotent
bin/ci # perform all checks
#+end_src

* Models
|                   |                            |
|-------------------+----------------------------|
| naming convention | CamelCased or snake_cased  |

** validations
*** validates
make sure a user has entered something into a field.

#+begin_src ruby
valdates :teacher_id, uniqueness: { scope: [:semester_id, :class_id] }
validates :email, length: { in: 5..50 }
#+end_src

*:presence*

#+begin_src ruby
validates :title, :body, presence: true
#+end_src

*:uniqueness*
validates whether the value of the specified attribute is unique across the system.

#+begin_src ruby
validates :email, uniqueness: true
valdates :teacher_id, uniqueness: { scope: [:semester_id, :class_id] }
#+end_src

*:length*

#+begin_src ruby
validates :email, length: { in: 5..50 }
#+end_src

*:format*
checks whether a value is in the correct format.

#+begin_src ruby
validates :email, format: { with:Â Â /\A[^@][\w.-]+@[\w.-]+[.][a-z]{2,4}\z/i }
#+end_src

*:confirmation*

#+begin_src ruby
validates :password, confirmation: true
#+end_src

*:acceptance*
*** validate


** concerns
** best pratices
*** fat models
An intelligent model like this is often called fat. Instead of performing model-related logic in
other places (i.e., in controllers or views), you keep it in the model, thus making it fat. This
makes your models easier to work with and helps your code stay DRY.
* Routes
The Rails router recognizes URLs and dispatches them to a controller's action,
or to a Rack application. It can also generate paths and URLs, avoiding the need
to hardcode strings in your views.

- localhost:xxxx/rails/info/routes

*Named routes*

#+begin_src ruby
get '/teams/search/:query', to: 'teams#search', as: 'search' #search_url and search_path
#+end_src

*only*

#+begin_src ruby
resources :articles, only: [:index, :show]
#+end_src

*Except*

Create all of the standard routes except those listed

#+begin_src ruby
resources :articles, except: [ :destroy ]
#+end_src

*Redirect*

#+begin_src ruby
get "/amazing", to: redirect("/widgets")
#+end_src

*Inline variable* (:foo)

#+begin_src ruby
# :query as an inline variable
get '/teams/search/:query', to: 'teams#search' # http://example.com/teams/search/toronto
#+end_src

#+begin_src ruby
get '/teams/home', to: 'teams#index' # http://example.com/teams
#+end_src

*Named routes*

#+begin_src ruby
get '/teams/search/:query', to: 'teams#search', as: 'search'
#+end_src

*Root*

#+begin_src ruby
root to: "articles#index"
#+end_src

Nested resources

- on their own because theyâ€™re conceptually meaningless

#+begin_src ruby
resources :articles do
  resources :comments
end
#+end_src

Resource (single)

- no index (6 paths)

#+begin_src ruby
resource :session
#+end_src

Namespacing

#+begin_src ruby
namespace :customer_service do
  resources :widgets, only: [ :show, :update, :destroy ]
end
#+end_src

Donâ€™t Create Custom Actions, Create More Resources

* Controller
> rails g controller ControllerName [action action] [options]

- name its controller as CamelCase, MixedCase or snake_case
- every specified actions generates an empty method in the controller and a template in app/views/#{controller_name}.

** methods
*** layout
#+begin_src ruby
layout 'my_layout' # Will use a layout in app/views/layouts/my_layout.
#+end_src

* Parameters
- hash-like

*Permit*

- specify which parameters are acceptable

#+begin_src ruby
params.require(:user).permit(:email, :password, :password_confirmation
#+end_src

* Views
** Templates
*** partials
- look for _* files

#+begin_src html
<%= render 'header', title: 'My Blog' %>
<%= render @article %>
<%= render 'articles/article', article: @article %>
#+end_src

Collections

- automatically loops across this collection and renders the partial of every object inside that array accordingly.

#+begin_src html
<%= render @articles
<!-- Same as, but w/ better perf than -->

<% @articles.each do |object| %>
Â Â <%= render object %>
<% end %>

#+end_src

** Embedded Ruby
*** evaluation embedding tags <% %>
*** output embedding tags <%= %>

* HTML Templates
*Guidelines*

- Mark up all content and controls using semantic HTML; use div and span to solve layout and styling problems.
- Build templates around the controllerâ€™s resource as a single instance variable.
- Extract shared components into partials
- ERB is fine.


Ideally, Expose One Instance Variable Per Action

Name the Instance Variable After the Resource


*image_tag*

- returns an HTML image tag for the source. The source can be a full path, a file, or an Active Storage attachment.

#+begin_src html
<%= image_tag article.cover_image.variant(resize_to_limit: local_assigns.fetch(:cover_image_options, [200, 200])) %>
#+end_src

*cycle*

- toggling between names on successive lines

#+begin_src html
<tr class="<%= cycle('list_line_odd', 'list_line_even') %>">
#+end_src

*truncate*

- display the first N characters

#+begin_src html
<%= truncate(strip_tags(product.description), length: 80) %>
#+end_src

*strip_tags*

- remove the HTML tags

*link_to*

#+begin_src html
<li><%= link_to 'Show', product %></li>
#+end_src

* Session
- implemented as a hash
- flash is a session

#+begin_src ruby
session[:account_id] = @account.id
session[:account_id] # => 1

session['message'] = "Hello world!"
session['message'] # => "Hello world!"
#+end_src

* Helpers
help views by providing a convenient location to encapsulate code that would
otherwise clutter the view and violate the terms of the MVC. They offer a middle
ground between controllers and views and help to keep your application organized
and easy to maintain.
** FormHelper
*** label
#+begin_src html
<label for="article_title">Title</label>
#+end_src
*** text_field
#+begin_src html
<input type="text" name="article[title]" id="article_title" />
<input class="large" type="text" name="article[title]" id="article_title" />
#+end_src
*** text_area
#+begin_src html
<textarea name="article[body]" id="article_body"></textarea>
#+end_src
*** datetime_select
#+begin_src html
<input type="submit" name="commit" value="Create Article" data-disable-with="Create Article" />
#+end_src

** FormTagHelper
** Number helpers
** Text helpers

#+begin_src ruby
simple_format
#+end_src
** URL helpers
link_to(name, options={}, html_options={})

#+begin_src ruby
link_to 'New', new_article_path, id: 'new_article_link'
link_to 'New', {controller: 'articles', action: 'new'}, class: 'large'
link_to 'New', {controller: 'articles', action: 'new'}, {class: 'large'}
#+end_src

ajax

#+begin_src ruby
<%= link_to "new comment", new_article_comment_path(@article), remote: true, id: 'new_comment_link' %>
#+end_src

* Enviroment
|                      |                                                |
|----------------------+------------------------------------------------|
| RAILS_ENV=production |                                                |
| DATABASE_URL         | database credentials                           |
| SECRET_KEY_BASE      | general secret key used for encrypting cookies |

* Logger
- live log feed: tail -f log/development.log
-  Every controller has a logger attribute.
** Methods
|       |   |
|-------+---|
| error |   |
| debug |   |
| warn  |   |

#+begin_src ruby
Rails.logger.debug "This will only show in development"
Rails.logger.warn "This will show in all environments"
#+end_src

* Debugging
** Views

** <% console %>
 abre um console na pÃ¡gina que vc coloca <% console %> aÃ­ vc pode chamar as variÃ¡veis daquela pÃ¡gina pra entender o que tÃ¡ Rolando
#+begin_src ruby
<% console %>
#+end_src

* Components
** Action Cable
*** concept
- create a channel, broadcast some data, and receive the data.
- support multiple streams
*** cli
|                          |                 |
|--------------------------+-----------------|
| generate channels <name> | in /app/channel |
|                          |                 |
* Active Record
- Single-Table Inheritance
- maps tables to classes, table rows to objects, and table columns to object attributes.
- Class names are singular; table names are plural.
- Tables contain an identity column named id.

** methods
New/create

#+begin_src ruby
# new
Article.new(title: "Introduction to Active Record",
body: "Active Record is Rails's default ORM..", published_at: Time.zone.now)

# create
Article.create(title: "RubyConf 2020", body: "The annual RubyConf will
take place in..", published_at: '2020-01-31')

# then save
article.save
#+end_src

Inspecting

#+begin_src ruby
article.new_record?
article.attributes
article.id
#+end_src

Order

#+begin_src ruby
Article.order(:title)
Article.order(published_at: :desc)
Article.order(published_at: :asc)
#+end_src

Conditions

#+begin_src ruby.
Article.where(title: 'RailsConf').first
#+end_src

Updating

#+begin_src ruby
article.update(title: "RailsConf2020", published_at: 1.day.ago)
article.update!(title: "RailsConf2020", published_at: 1.day.ago)
#+end_src

Deleting

- destroy style works on the instance
- delete style operates on the class
- delete must be supplied with an array object explicitly

#+begin_src ruby
Article.last.destroy
Article.destroy(2)
Article.destroy([2,3])

article.destroy

# Remove the row immediately from the database

Article.delete(4) # donâ€™t instantiate or perform callbacks on the object theyâ€™re deleting
Article.delete_all
Article.delete_by("published_at < '2011-01-01'") # with conditions
Article.delete([5, 6])
#+end_src

Misc

#+begin_src ruby
article.valid?
article.errors.size
article.errors.messages[:title]
article.errors.full_messages

articles.size
Article.count
#+end_src

Find

#+begin_src ruby
Article.find 3
Article.find [2,4]
Article.first
Article.last
Article.all
#+end_src

Errors

#+begin_src ruby
article.errors.any?
article.errors.full_messages
article.errors.messages[:title]
article.errors.messages(:nonexistent) # []
article.errors.size
article.valid?
#+end_src

** associations
|                         |                                                                                    |
|-------------------------+------------------------------------------------------------------------------------|
| has_many                |                                                                                    |
| has_one                 |                                                                                    |
| belongs_to              | goes in the class with the foreign key                                             |
| many_to_many            |                                                                                    |
| has_and_belongs_to_many | join table that keeps a reference to the foreign keys involved in the relationship |
|                         |                                                                                    |

#+begin_src ruby
class Message < ApplicationRecord
Â Â has_many :attachments
end

class Attachment < ApplicationRecord
Â Â belongs_to :message
end

user = User.create(email: "user@example.com", password: "secret"
profile = Profile.create(name: "John Doe", bio: "Ruby developer trying to learn Rails")
profile.user = user
user.profile.destroy
user.create_profile name: 'Jane Doe', color: 'pink'
user.build_profile(bio: 'eats leaves')
#+end_src

** exceptions
|                |                                             |
|----------------+---------------------------------------------|
| RecordNotFound | couldnâ€™t find any record with the id given. |

** Validations
** Callbacks
*** before_create
*** after_create
*** before_save
*** after_save
*** before_destroy
*** after_destroy

** Migrations
** Migration
*** drop_table
drop existing migration table
#+begin_src
ActiveRecord::Migration.drop_table :articles
#+end_src

** Filters
- before_create
- after_create
- before_save
- after_save
- before_destroy
- after_destroy

:only :except

#+begin_src ruby
before_action :authenticate, only: :destroy
#+end_src

skip

#+begin_src ruby
class ApplicationController < ActionController::Base
Â Â before_action :authenticate_with_token
end

class PublicController < ApplicationController
Â Â # We don't want to check for a token on this controller
Â Â skip_before_action :authenticate_with_token
end
#+end_src

** Query Interface
** Finding
*** SQL Syntax
#+begin_src ruby
Obj.where(title: 'AwesomeWM is really awesome')
#+end_src
*** Array Condition Syntax
#+begin_src ruby
Article.where("published_at < ?", Time.now)
Article.where("published_at < ?", Time.now).to_sql # inspect the issued SQL statement

Article.where("title LIKE :search OR body LIKE :search", {search: '%association%'})
Article.where("created_at > '2020-02-04' AND body NOT LIKE '%model%'")
#+end_src

*** Association Proxies
- Chain together multiple calls to Active Record

#+begin_src ruby
User.first.articles.all
current_user.articles.find(1)
# creates a new article for the current_user.
current_user.articles.create(title: 'Private', body: â€˜Body here..â€™)
#+end_src
*** more
#+begin_src ruby
Article.order("published_at DESC")
Article.limit(1)
Article.joins(:comments)
Article.includes(:comments)
Article.order("title DESC").limit(2)

#+end_src
*** methods
**** where
Specifies the conditions in which the records are returned as a WHERE SQL
fragment.
#+begin_src ruby
Article.where("title = 'Advanced Active Record'")
#+end_src

**** find
**** findby
**** order
Specifies the order in which the records are returned as an ORDER BY SQL
fragment.

#+begin_src ruby
Article.order("published_at DESC")
#+end_src
**** limit
Specifies the number of records to be returned as a LIMIT SQL fragment.
#+begin_src ruby
Article.limit(1)
#+end_src
**** joins
Specifies associated tables to be joined in as a JOIN SQL fragment.
#+begin_src ruby
Article.joins(:comments)
#+end_src
**** includes
Specifies associated tables to be joined and loaded as Active Record objects in a JOIN SQL fragment.
#+begin_src ruby
Article.includes(:comments)
#+end_src
** Default Scope
Use this macro in your model to set a default scope for all operations on the model.

- will reset order everytime, costly.

#+begin_src ruby
default_scope { order :name }
#+end_src

** Named Scope
#+begin_src ruby
scope :published, -> { where.not(published_at: nil) }
scope :draft, -> { where(published_at: nil) }
scope :recent, -> { where('articles.published_at > ?', 1.week.ago.to_date) }
scope :where_title, -> (term) { where("articles.title LIKE ?", "%#{term}%") }
#+end_src
** Seeds
*** methods
#+begin_src ruby
.create({})
.create({})
.find_or_create_by({})
#+end_src
* Action Text

Include Action Textâ€™s JavaScript and CSS in the application.

#+begin_src ruby
rails action_text:install
#+end_src

* Active Storage

* Action Pack
- controller and the view
* Action Controller
Action Controller is the C in MVC. After the router has determined which
controller to use for a request, the controller is responsible for making sense
of the request and producing the appropriate output. Luckily, Action Controller
does most of the groundwork for you and uses smart conventions to make this as
straightforward as possible.

- unless otherwise stated, when an action is finished firing, it renders a view.
* Action View
* Action Dispatch
- handles routing
- decides which controller should handle a given request
* Cache
|                      |                                                                          |
|----------------------+--------------------------------------------------------------------------|
| dev:cache            | toggle caching on and off in the development environment(restart server) |
* Tests
|                 |             |
|-----------------+-------------|
| assert_select   | integration |
| assert_response |             |

** RSpec
** Unit

* Traits
- Active Records: Ruby object-relational mapping (ORM) library
- root_path
** REST
** JSON
** Terms
- accepts_nested_attributes_for
- validates_presence_of
- content_tag
- stylesheet_tag bootstrap_url @ application_html.erb
- HTTP status codes: Rack::Atolls::HTTP_STATUS_CODES
* Internationalization
** methods
- i18n.t()
- i18n.l()
- i18n.locale
- i18n.available_locales
* External Toolings
** Direnv

Guix + Direnv example file
#+begin_src shell
use guix --ad-hoc nss-certs gawk git \
    ruby@3.0 libyaml \
    libsass gcc-toolchain \
    node sqlite
# ===================================================

# * GUIX
# Direnv do not set $GUIX_ENVIRONMENT
export GUIX_ENVIRONMENT="$(echo $LIBRARY_PATH | gawk -F '/lib' '{print $1}')"

# * RUNTIME LIBRARIES
# needed by Rails toolings.
# gcc-toolchain complains if $LD_LIBRARY_PATH is set
# export LD_LIBRARY_PATH="$GUIX_ENVIRONMENT/lib"

# SSL AUTH
# gems need this.
export SSL_CERT_FILE="$GUIX_ENVIRONMENT/etc/ssl/certs/ca-certificates.crt"
# ===================================================

# * GEM
# Install gems locally
export GEM_HOME=$PWD/.gems
export GEM_PATH=$GEM_HOME:$GEM_PATH
export PATH=$GEM_HOME/bin:$PATH
# ===================================================

# * NPM
# Install npm packages locally
export NPM_CONFIG_PREFIX="$PWD/.npm"
export NPM_CONFIG_USERCONFIG="$PWD/.npm/config"
export NPM_CONFIG_CACHE="$PWD/.npm/cache"
export NPM_CONFIG_TMP="$PWD/.npm/tmp"
export NPM_HOME="$NPM_CONFIG_PREFIX"
export NPM_BIN="$NPM_HOME/bin"
export PATH="$NPM_BIN":$PATH
# ===================================================


# * GUIX ANNOTATIONS
# ** FFI:
# install ffi w/: gem install ffi -- --disable-system-libffi

# ** GCC-TOOLCHAIN:
# libsass need it to compile files

# ** SQLITE
#+end_src
** Docker
#+begin_src dockerfile
FROM ruby:2.5.1-alpine

ENV BUNDLER_VERSION=2.0.2

RUN apk add --update --no-cache \
      binutils-gold \
      build-base \
      curl \
      file \
      g++ \
      gcc \
      git \
      less \
      libstdc++ \
      libffi-dev \
      libc-dev \
      linux-headers \
      libxml2-dev \
      libxslt-dev \
      libgcrypt-dev \
      make \
      netcat-openbsd \
      nodejs \
      openssl \
      pkgconfig \
      postgresql-dev \
      python \
      tzdata \
      yarn

RUN gem install bundler -v 2.0.2

WORKDIR /app

COPY Gemfile Gemfile.lock ./

RUN bundle config build.nokogiri --use-system-libraries

RUN bundle check || bundle install

COPY package.json yarn.lock ./

RUN yarn install --check-files

COPY . ./

ENTRYPOINT ["./entrypoints/docker-entrypoint.sh"]
#+end_src
*** docker-compose
#+begin_src yml
version: '3.4'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
      - redis
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules
    env_file: .env
    environment:
      RAILS_ENV: development

  database:
    image: postgres:12.1
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:5.0.7

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - app
      - database
      - redis
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules
    env_file: .env
    environment:
      RAILS_ENV: development
    entrypoint: ./entrypoints/sidekiq-entrypoint.sh

volumes:
  gem_cache:
  db_data:
  node_modules:
#+end_src

