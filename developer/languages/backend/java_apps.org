#+TITLE: Java Language - Applications

* Progress
** Books
| name  | chapter                | @ |
|-------+------------------------+---|
| Junit | 2 Exploring core JUnit |   |

** SLOC
| Source Code | folder | file | @ |
|-------------+--------+------+---|
| junit       |        |      |   |

* Maven
** mvnw
*spring-boot:run*
*test*
*package*
** mvn
*package*
take the compiled code and package it in its distributable format, such as a JAR.
*compile*
compile the source code of the project
*test*
test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
*clean*
*validate*
validate the project is correct and all necessary information is available

integration-test: process and deploy the package if necessary into an environment where integration tests can be run
verify: run any checks to verify the package is valid and meets quality criteria
install: install the package into the local repository, for use as a dependency in other projects locally
deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.

clean: cleans up artifacts created by prior builds
site: generates site documentation for this project


*-B*
generate new maven project

#+begin_src shell
mvn -B archetype:generate -DgroupId=com.sohamkamani -DartifactId=mvn-example -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4
#+end_src

build

#+begin_src shell
mvn -B package --file pom.xml
#+end_src

* Ant
* Gradle
** commands
*** test
*** run
*** build

* JUnit

** Annotations
*@BeforeEach*
*@BeforeAll*
*@AfterEach
*@AfterAll
*@Before
*@BeforeClass
*@After
*@AfterClass

* jbang
*
