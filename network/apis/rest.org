#+TITLE: REST

* Progress
** Books
| Books              | Chapter | late           | revision |
|--------------------+---------+----------------+----------|
| Restful API  in Go |       2 | POST-PATCH-put |          |

** SLOC
| Project   | folder        | file        | @ |
|-----------+---------------+-------------+---|
| elixir    | eex/lib/eex   | datetime.ex |   |
| elixir-ls |               |             |   |
| ecto      | /ecto/adapter | queryable   |   |
* Features
* Verbs

| verb    | action                                               |  Sucess | failure |
|---------+------------------------------------------------------+---------+---------|
| GET     | Fetches a record or set of resources from the server |     202 |     404 |
| OPTIONS | Fetches all available REST operations                |     200 |       - |
| POST    | Creates a new set of resources or a resource         |     201 | 404,409 |
| PUT     | Updates or replaces the given record                 | 200,204 |     404 |
| PATCH   | Modifies the given record                            | 200,204 |     404 |
| DELETE  | Deletes the given resource                           |     200 |     404 |
** POST
The POST method is used to create a resource on the server.

- success: 201
- failure: 404,409
- can update multiple resources

/v1/books

#+begin_src json
{"name" : "Lord of the rings", "year": 1954, "author" : "J. R. R. Tolkien"}
#+end_src
** PUT
used to replace the resource that already exists

- idempotent

/v1/books/1256

#+begin_src json
{"name" : "Lord of the rings", "year": 1955, "author" : "J. R. R. Tolkien"}
#+end_src
** PATCH
Patches the column that is being modified.

- won't replace the whole record
- success: 200
- failure: 404

/v1/books/1256
#+begin_src json
{"isbn" : "0618640150"}
#+end_src
** DELETE
Deletes a resource from the database.

- just needs an ID of the resource to be deletes
- idempotent.

** OPTIONS
Tries to know all possible methods (GET, POST, and so on) defined

** Cross-Origin Resource Sharing (CORS)
* Status Codes
** 2xx family
Indicates that an operation was successful

200: Successful Operation
201: Successfully Created
204: No content
** 3xx family
conveys redirection messages

301: when a resource is moved permanently to a new URL endpoint.
304: status code indicates that content is cached and no modification happened for the resource on the server.
** 4xx family
error status codes which the client needs to interpret and handle further actions.

*** cases
- wrong request format
- ill-formed REST method can cause tese errors

*** codes
| code | name               | meaning                                                              |
|------+--------------------+----------------------------------------------------------------------|
|  400 | Bad Request        | server cannot understand the client request.                         |
|  401 | Unauthorized       | client is not sending the authorization information in the header.   |
|  403 | Forbidden          | client has no access to a certain type of resources.                 |
|  404 | Not Found          | client request is on a resource that is nonexisting.                 |
|  405 | Method Not Allowed | server bans a few methods on resources. GET and HEAD are exceptions. |

** 5xx family
The client request may be perfect, but due to a bug in the server code, these errors can arise.

|     |                       |                                                                                                                  |
|-----+-----------------------+------------------------------------------------------------------------------------------------------------------|
| 500 | Internal Server Error | status code gives the development error which is caused by some buggy code or some unexpected condition          |
| 501 | Not Implemented       | server is no longer supporting the method on a resource                                                          |
| 502 | Bad Gateway           | server itself got an error response from another service vendor                                                  |
| 503 | Service Unavailable   | server is down due to multiple reasons, like a heavy load or for maintenance                                     |
| 504 | Gateway Timeout       | server is waiting a long time for a response from another vendor and is taking too much time to serve the client |

* Resources
- may be represented in a different format from the one in which it is stored.
* Frameworks
** swagger
* SOA
